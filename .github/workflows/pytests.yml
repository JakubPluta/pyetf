name: Pytests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install
      - name: Install project
        run: poetry install --no-interaction
      - name: Run tests
        run: |
          source .venv/bin/activate
          pip install requests
          pytest --cov=./ --cov-report=xml -vv -ss -k "not test_functional"
          echo "tests finished"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            directory: ./coverage/reports/
            env_vars: OS,PYTHON
            fail_ci_if_error: true
            files: ./coverage.xml,./coverage1.xml,./coverage2.xml,!./cache
            flags: unittests
            name: codecov-umbrella
            verbose: true